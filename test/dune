(executable
 (name test)
 (modules test)
 (libraries clang))

(rule
 (deps decl0.c)
 (targets decl0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff decl0.expected decl0.output)))

(rule
 (deps stmt0.c)
 (targets stmt0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff stmt0.expected stmt0.output)))

(rule
 (deps long0.c)
 (targets long0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff long0.expected long0.output)))

(rule
 (deps alignof0.c)
 (targets alignof0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff alignof0.expected alignof0.output)))

(rule
 (deps anonymous-struct0.c)
 (targets anonymous-struct0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff anonymous-struct0.expected anonymous-struct0.output)))

(rule
 (deps anonymous-struct1.c)
 (targets anonymous-struct1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff anonymous-struct1.expected anonymous-struct1.output)))

(rule
 (deps anonymous-struct2.c)
 (targets anonymous-struct2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff anonymous-struct2.expected anonymous-struct2.output)))

(rule
 (deps while0.c)
 (targets while0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff while0.expected while0.output)))

(rule
 (deps while1.c)
 (targets while1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff while1.expected while1.output)))

(rule
 (deps while2.c)
 (targets while2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff while2.expected while2.output)))

(rule
 (deps variable-array0.c)
 (targets variable-array0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff variable-array0.expected variable-array0.output)))

(rule
 (deps variable-array1.c)
 (targets variable-array1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff variable-array1.expected variable-array1.output)))

(rule
 (deps usertype-in-local0.c)
 (targets usertype-in-local0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff usertype-in-local0.expected usertype-in-local0.output)))

(rule
 (deps usertype-in-local1.c)
 (targets usertype-in-local1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff usertype-in-local1.expected usertype-in-local1.output)))

(rule
 (deps usertype-in-local2.c)
 (targets usertype-in-local2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff usertype-in-local2.expected usertype-in-local2.output)))

(rule
 (deps usertype-in-local3.c)
 (targets usertype-in-local3.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff usertype-in-local3.expected usertype-in-local3.output)))

(rule
 (deps unicode0.c)
 (targets unicode0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff unicode0.expected unicode0.output)))

(rule
 (deps unexposed.c)
 (targets unexposed.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff unexposed.expected unexposed.output)))

(rule
 (deps unary_operator0.c)
 (targets unary_operator0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff unary_operator0.expected unary_operator0.output)))

(rule
 (deps type0.c)
 (targets type0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff type0.expected type0.output)))

(rule
 (deps type1.c)
 (targets type1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff type1.expected type1.output)))

(rule
 (deps type2.c)
 (targets type2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff type2.expected type2.output)))

(rule
 (deps ternop0.c)
 (targets ternop0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff ternop0.expected ternop0.output)))

(rule
 (deps ternop1.c)
 (targets ternop1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff ternop1.expected ternop1.output)))

(rule
 (deps ternop2.c)
 (targets ternop2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff ternop2.expected ternop2.output)))

(rule
 (deps switch0.c)
 (targets switch0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff switch0.expected switch0.output)))

(rule
 (deps switch1.c)
 (targets switch1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff switch1.expected switch1.output)))
