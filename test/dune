(executable
 (name test)
 (modules test)
 (libraries clang))

(rule
 (deps decl0.c)
 (targets decl0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff decl0.expected decl0.output)))

(rule
 (deps stmt0.c)
 (targets stmt0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff stmt0.expected stmt0.output)))

(rule
 (deps long0.c)
 (targets long0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff long0.expected long0.output)))

(rule
 (deps alignof0.c)
 (targets alignof0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff alignof0.expected alignof0.output)))

(rule
 (deps anonymous-struct0.c)
 (targets anonymous-struct0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff anonymous-struct0.expected anonymous-struct0.output)))

(rule
 (deps anonymous-struct1.c)
 (targets anonymous-struct1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff anonymous-struct1.expected anonymous-struct1.output)))

(rule
 (deps anonymous-struct2.c)
 (targets anonymous-struct2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff anonymous-struct2.expected anonymous-struct2.output)))

(rule
 (deps while0.c)
 (targets while0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff while0.expected while0.output)))

(rule
 (deps while1.c)
 (targets while1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff while1.expected while1.output)))

(rule
 (deps while2.c)
 (targets while2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff while2.expected while2.output)))

(rule
 (deps variable-array0.c)
 (targets variable-array0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff variable-array0.expected variable-array0.output)))

(rule
 (deps variable-array1.c)
 (targets variable-array1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff variable-array1.expected variable-array1.output)))

(rule
 (deps usertype-in-local0.c)
 (targets usertype-in-local0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff usertype-in-local0.expected usertype-in-local0.output)))

(rule
 (deps usertype-in-local1.c)
 (targets usertype-in-local1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff usertype-in-local1.expected usertype-in-local1.output)))

(rule
 (deps usertype-in-local2.c)
 (targets usertype-in-local2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff usertype-in-local2.expected usertype-in-local2.output)))

(rule
 (deps usertype-in-local3.c)
 (targets usertype-in-local3.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff usertype-in-local3.expected usertype-in-local3.output)))

(rule
 (deps unicode0.c)
 (targets unicode0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff unicode0.expected unicode0.output)))

(rule
 (deps unexposed.c)
 (targets unexposed.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff unexposed.expected unexposed.output)))

(rule
 (deps unary_operator0.c)
 (targets unary_operator0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff unary_operator0.expected unary_operator0.output)))

(rule
 (deps type0.c)
 (targets type0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff type0.expected type0.output)))

(rule
 (deps type1.c)
 (targets type1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff type1.expected type1.output)))

(rule
 (deps type2.c)
 (targets type2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff type2.expected type2.output)))

(rule
 (deps ternop0.c)
 (targets ternop0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff ternop0.expected ternop0.output)))

(rule
 (deps ternop1.c)
 (targets ternop1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff ternop1.expected ternop1.output)))

(rule
 (deps ternop2.c)
 (targets ternop2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff ternop2.expected ternop2.output)))

(rule
 (deps switch0.c)
 (targets switch0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff switch0.expected switch0.output)))

(rule
 (deps switch1.c)
 (targets switch1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff switch1.expected switch1.output)))

(rule
 (deps struct0.c)
 (targets struct0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff struct0.expected struct0.output)))

(rule
 (deps struct1.c)
 (targets struct1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff struct1.expected struct1.output)))

(rule
 (deps struct2.c)
 (targets struct2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff struct2.expected struct2.output)))

(rule
 (deps struct3.c)
 (targets struct3.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff struct3.expected struct3.output)))

(rule
 (deps struct4.c)
 (targets struct4.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff struct4.expected struct4.output)))

(rule
 (deps struct5.c)
 (targets struct5.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff struct5.expected struct5.output)))

(rule
 (deps struct6.c)
 (targets struct6.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff struct6.expected struct6.output)))

(rule
 (deps struct7.c)
 (targets struct7.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff struct7.expected struct7.output)))

(rule
 (deps stmtexpr0.c)
 (targets stmtexpr0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff stmtexpr0.expected stmtexpr0.output)))

(rule
 (deps static0.c)
 (targets static0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff static0.expected static0.output)))

(rule
 (deps self-reference-array.c)
 (targets self-reference-array.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff self-reference-array.expected self-reference-array.output)))

(rule
 (deps return0.c)
 (targets return0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff return0.expected return0.output)))

(rule
 (deps return1.c)
 (targets return1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff return1.expected return1.output)))

(rule
 (deps return2.c)
 (targets return2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff return2.expected return2.output)))

(rule
 (deps predef-macro.c)
 (targets predef-macro.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff predef-macro.expected predef-macro.output)))

(rule
 (deps pointer0.c)
 (targets pointer0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff pointer0.expected pointer0.output)))

(rule
 (deps pointer1.c)
 (targets pointer1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff pointer1.expected pointer1.output)))

(rule
 (deps pointer2.c)
 (targets pointer2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff pointer2.expected pointer2.output)))

(rule
 (deps pointer3.c)
 (targets pointer3.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff pointer3.expected pointer3.output)))

(rule
 (deps pointer4.c)
 (targets pointer4.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff pointer4.expected pointer4.output)))

(rule
 (deps pointer5.c)
 (targets pointer5.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff pointer5.expected pointer5.output)))

(rule
 (deps pointer6.c)
 (targets pointer6.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff pointer6.expected pointer6.output)))

(rule
 (deps param0.c)
 (targets param0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff param0.expected param0.output)))

(rule
 (deps nested-init0.c)
 (targets nested-init0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff nested-init0.expected nested-init0.output)))

(rule
 (deps nested-init1.c)
 (targets nested-init1.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff nested-init1.expected nested-init1.output)))

(rule
 (deps nested-init2.c)
 (targets nested-init2.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff nested-init2.expected nested-init2.output)))

(rule
 (deps namespace0.c)
 (targets namespace0.output)
 (action
  (with-stdout-to
   %{targets}
   (pipe-stdout
    (ignore-stderr
     (run ./test.exe %{deps}))
    (run clang-format)))))

(rule
 (alias runtest)
 (action
  (diff namespace0.expected namespace0.output)))
